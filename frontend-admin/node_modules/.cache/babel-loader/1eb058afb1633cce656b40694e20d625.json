{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\node\\\\asm3\\\\frontend-admin\\\\src\\\\pages\\\\auth\\\\signIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { Link, Redirect } from 'react-router-dom';\n// import UserAPI from '../API/UserAPI';\n// import { addSession } from '../Redux/Action/ActionSession';\nimport './signIn.css';\nimport AdminAPI from '../../API/AdminAPI';\nimport queryString from 'query-string';\n// import CartAPI from '../API/CartAPI';\nimport bcrypt from 'bcryptjs';\n\n// var bcrypt = require('bcrypt');\n// var salt = bcrypt.genSaltSync(12);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignIn(props) {\n  _s();\n  //listCart được lấy từ redux\n  // const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState([]);\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [checkPush, setCheckPush] = useState(false);\n\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const response = await UserAPI.getAllData();\n  //     setUser(response.data.users);\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n  const onSubmit = () => {\n    const user = {\n      email: email,\n      password: password\n    };\n    console.log(email);\n    console.log(password);\n    console.log(errorEmail);\n    console.log(errorPassword);\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          // const findUser = user.find((value) => {\n          //   return value.email === email;\n          // });\n\n          // if (!findUser) {\n          //   setErrorEmail(true);\n          //   return;\n          // } else {\n          //   setErrorEmail(false);\n          // const check = bcrypt.compareSync(password, findUser.password);\n          // if (!check) {\n          //   setErrorPassword(true);\n          //   return;\n          // } else {\n          // setErrorPassword(false);\n          const fetchData = async () => {\n            const response = AdminAPI.postSignIn(user);\n            console.log(response);\n          };\n          fetchData();\n\n          // localStorage.setItem('id_user', findUser._id);\n\n          // localStorage.setItem('name_user', findUser.fullname);\n\n          // const action = addSession(localStorage.getItem('id_user'));\n          // dispatch(action);\n\n          // setCheckPush(true);\n          // }\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n  //     if (checkPush === true) {\n  //       for (let i = 0; i < listCart.length; i++) {\n  //         //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n  //         const params = {\n  //           idUser: localStorage.getItem('id_user'),\n  //           idProduct: listCart[i].idProduct,\n  //           count: listCart[i].count,\n  //         };\n\n  //         const query = '?' + queryString.stringify(params);\n\n  //         const response = await CartAPI.postAddToCart(query);\n  //         console.log(response);\n  //       }\n\n  //       setRedirect(true);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, [checkPush]);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"limiter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-login100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login100-form-title p-b-33\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center pb-5\",\n          children: [emailRegex && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Incorrect Email Format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), errorEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Please Check Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), errorPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Please Check Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-input100 validate-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input100\",\n            type: \"text\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-input100 rs1 validate-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input100\",\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-login100-form-btn m-t-20\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login100-form-btn\",\n            onClick: onSubmit,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"jtDZp+NFQV0hcIzFia9Q7iK//as=\");\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useEffect","useState","AdminAPI","queryString","bcrypt","SignIn","props","email","setEmail","password","setPassword","user","setUser","errorEmail","setErrorEmail","emailRegex","setEmailRegex","errorPassword","setErrorPassword","redirect","setRedirect","checkPush","setCheckPush","onChangeEmail","e","target","value","onChangePassword","onSubmit","console","log","validateEmail","fetchData","response","postSignIn","re","test","String","toLowerCase"],"sources":["D:/Documents/node/asm3/frontend-admin/src/pages/auth/signIn.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import { Link, Redirect } from 'react-router-dom';\r\n// import UserAPI from '../API/UserAPI';\r\n// import { addSession } from '../Redux/Action/ActionSession';\r\nimport './signIn.css';\r\nimport AdminAPI from '../../API/AdminAPI';\r\nimport queryString from 'query-string';\r\n// import CartAPI from '../API/CartAPI';\r\nimport bcrypt from 'bcryptjs';\r\n\r\n// var bcrypt = require('bcrypt');\r\n// var salt = bcrypt.genSaltSync(12);\r\n\r\nfunction SignIn(props) {\r\n  //listCart được lấy từ redux\r\n  // const listCart = useSelector((state) => state.Cart.listCart);\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [user, setUser] = useState([]);\r\n\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n  const [emailRegex, setEmailRegex] = useState(false);\r\n  const [errorPassword, setErrorPassword] = useState(false);\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const [checkPush, setCheckPush] = useState(false);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     const response = await UserAPI.getAllData();\r\n  //     setUser(response.data.users);\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const user = { email: email, password: password };\r\n    console.log(email);\r\n    console.log(password);\r\n    console.log(errorEmail);\r\n    console.log(errorPassword);\r\n\r\n    if (!email) {\r\n      setErrorEmail(true);\r\n      return;\r\n    } else {\r\n      if (!password) {\r\n        setErrorEmail(false);\r\n        setErrorPassword(true);\r\n        return;\r\n      } else {\r\n        setErrorPassword(false);\r\n        if (!validateEmail(email)) {\r\n          setEmailRegex(true);\r\n          return;\r\n        } else {\r\n          setEmailRegex(false);\r\n\r\n          // const findUser = user.find((value) => {\r\n          //   return value.email === email;\r\n          // });\r\n\r\n          // if (!findUser) {\r\n          //   setErrorEmail(true);\r\n          //   return;\r\n          // } else {\r\n          //   setErrorEmail(false);\r\n          // const check = bcrypt.compareSync(password, findUser.password);\r\n          // if (!check) {\r\n          //   setErrorPassword(true);\r\n          //   return;\r\n          // } else {\r\n          // setErrorPassword(false);\r\n          const fetchData = async () => {\r\n            const response = AdminAPI.postSignIn(user);\r\n\r\n            console.log(response);\r\n          };\r\n\r\n          fetchData();\r\n\r\n          // localStorage.setItem('id_user', findUser._id);\r\n\r\n          // localStorage.setItem('name_user', findUser.fullname);\r\n\r\n          // const action = addSession(localStorage.getItem('id_user'));\r\n          // dispatch(action);\r\n\r\n          // setCheckPush(true);\r\n          // }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     //Lần đầu sẽ không thực hiện insert được vì addCart = ''\r\n  //     if (checkPush === true) {\r\n  //       for (let i = 0; i < listCart.length; i++) {\r\n  //         //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\r\n  //         const params = {\r\n  //           idUser: localStorage.getItem('id_user'),\r\n  //           idProduct: listCart[i].idProduct,\r\n  //           count: listCart[i].count,\r\n  //         };\r\n\r\n  //         const query = '?' + queryString.stringify(params);\r\n\r\n  //         const response = await CartAPI.postAddToCart(query);\r\n  //         console.log(response);\r\n  //       }\r\n\r\n  //       setRedirect(true);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, [checkPush]);\r\n\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  return (\r\n    <div className=\"limiter\">\r\n      <div className=\"container-login100\">\r\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\r\n          <span className=\"login100-form-title p-b-33\">Sign In</span>\r\n\r\n          <div className=\"d-flex justify-content-center pb-5\">\r\n            {emailRegex && (\r\n              <span className=\"text-danger\">* Incorrect Email Format</span>\r\n            )}\r\n            {errorEmail && (\r\n              <span className=\"text-danger\">* Please Check Your Email</span>\r\n            )}\r\n            {errorPassword && (\r\n              <span className=\"text-danger\">* Please Check Your Password</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"wrap-input100 validate-input\">\r\n            <input\r\n              className=\"input100\"\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={onChangeEmail}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"wrap-input100 rs1 validate-input\">\r\n            <input\r\n              className=\"input100\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"container-login100-form-btn m-t-20\">\r\n            {/* {redirect && <Redirect to={`/`} />} */}\r\n            <button className=\"login100-form-btn\" onClick={onSubmit}>\r\n              Sign in\r\n            </button>\r\n          </div>\r\n\r\n          {/* <div className=\"text-center p-t-45 p-b-4\">\r\n            <span className=\"txt1\">Create an account?</span>\r\n            &nbsp;\r\n            <Link to=\"/signup\" className=\"txt2 hov1\">\r\n              Sign up\r\n            </Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}